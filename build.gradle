plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.14.3'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

subprojects {

    apply plugin: 'java-library'
    apply plugin: 'groovy'
    apply plugin: 'signing'
    apply plugin: 'maven-publish'

    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    ext {
        springBootVersion = '3.0.2'
        resilience4jVersion = '2.0.2'
        okHttpVersion = '4.10.0'

        group = 'com.github.mkopylec'
        pomContent = {
            name = 'Charon Spring Boot Starter'
            description = 'Reverse proxy implementation in form of Spring Boot starter'
            url = 'https://github.com/mkopylec/charon-spring-boot-starter'
            licenses {
                license {
                    name = 'The Apache License, Version 2.0'
                    url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
            developers {
                developer {
                    id = 'mkopylec'
                    name = 'Mariusz Kopylec'
                    email = 'mariusz.kopylec@o2.pl'
                }
            }
            scm {
                connection = 'scm:git:https://github.com/mkopylec/charon-spring-boot-starter.git'
                developerConnection = 'scm:git:https://github.com/mkopylec/charon-spring-boot-starter.git'
                url = 'https://github.com/mkopylec/charon-spring-boot-starter'
            }
        }
    }

    scmVersion {
        tag {
            prefix = ''
        }
    }

    group = project.ext.group
    archivesBaseName = name
    version = scmVersion.version

    dependencies {
        api group: 'org.springframework', name: 'spring-web', version: '6.0.4'
        api group: 'io.github.resilience4j', name: 'resilience4j-circuitbreaker', version: resilience4jVersion
        api group: 'io.github.resilience4j', name: 'resilience4j-ratelimiter', version: resilience4jVersion
        api group: 'io.github.resilience4j', name: 'resilience4j-retry', version: resilience4jVersion
        api group: 'io.github.resilience4j', name: 'resilience4j-micrometer', version: resilience4jVersion
        api group: 'io.micrometer', name: 'micrometer-core', version: '1.10.3'
        api group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
        api group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
        api group: 'commons-io', name: 'commons-io', version: '2.11.0'
    }

    test {
        useJUnitPlatform()
    }
}

nexusPublishing {
    packageGroup = 'com.github.mkopylec'
    repositories {
        sonatype {
            username = project.ext.has('ossrhUsername') ? project.ext.ossrhUsername : ''
            password = project.ext.has('ossrhPassword') ? project.ext.ossrhPassword : ''
        }
    }
}

wrapper {
    gradleVersion = '7.6'
}
